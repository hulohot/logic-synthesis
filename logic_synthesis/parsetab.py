
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSCOLON COMMA DIVIDE IDENTIFIER LPAREN MINUS NUMBER PLUS RPAREN SEMICOLON TIMESstatement : expression SEMICOLONexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : IDENTIFIER'
    
_lr_action_items = {'MINUS':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,],[3,9,3,3,-8,-9,3,3,3,3,-6,9,-2,-3,-4,-5,-7,]),'LPAREN':([0,3,4,8,9,10,11,],[4,4,4,4,4,4,4,]),'NUMBER':([0,3,4,8,9,10,11,],[5,5,5,5,5,5,5,]),'IDENTIFIER':([0,3,4,8,9,10,11,],[6,6,6,6,6,6,6,]),'$end':([1,7,],[0,-1,]),'SEMICOLON':([2,5,6,12,14,15,16,17,18,],[7,-8,-9,-6,-2,-3,-4,-5,-7,]),'PLUS':([2,5,6,12,13,14,15,16,17,18,],[8,-8,-9,-6,8,-2,-3,-4,-5,-7,]),'TIMES':([2,5,6,12,13,14,15,16,17,18,],[10,-8,-9,-6,10,10,10,-4,-5,-7,]),'DIVIDE':([2,5,6,12,13,14,15,16,17,18,],[11,-8,-9,-6,11,11,11,-4,-5,-7,]),'RPAREN':([5,6,12,13,14,15,16,17,18,],[-8,-9,-6,18,-2,-3,-4,-5,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,8,9,10,11,],[2,12,13,14,15,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','parser.py',16),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',21),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',22),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',23),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',24),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',41),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',46),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',51),
  ('expression -> IDENTIFIER','expression',1,'p_expression_name','parser.py',56),
]
